services:
  base_image:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: base
    image: base

  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend.dockerfile
    container_name: frontend_api
    image: frontend_api
    ports:
      - "8001:8001"
    env_file:
      - ./src/frontend_api/.env
    volumes:
      - ./src/frontend_api:/workspace/library/frontend_api
    depends_on:
      - base_image
      - mongodb
      - rabbitmq
      - backend
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  backend:
    build:
      context: .
      dockerfile: ./docker/backend.dockerfile
    container_name: backend_api
    image: backend_api
    ports:
      - "8002:8002"
    env_file:
      - ./src/backend_api/.env
    volumes:
      - ./src/backend_api:/workspace/library/backend_api
    depends_on:
      - base_image
      - mariadb
      - rabbitmq
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    ports:
      - "3306:3306"
    env_file:
      - ./docker/backend.env
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./schema/init-backend_db.sql:/opt/init-backend_db.sql
      - ./schema/init-backend_data.sql:/opt/init-backend_data.sql
      - ./docker/config/mariadb/0-init.sh:/docker-entrypoint-initdb.d/0-init.sh
    restart: always
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    env_file:
      - ./docker/frontend.env
    volumes:
      - mongodb_data:/data/db
      - ./schema/init-frontend_data.js:/docker-entrypoint-initdb.d/init-frontend_data.js
      - ./docker/config/mongodb/0-init.sh:/docker-entrypoint-initdb.d/0-init.sh
    restart: always
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s 

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - ./docker/broker.env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    depends_on:
      - mariadb
      - mongodb
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s

volumes:
  mariadb_data:
  mongodb_data:
  rabbitmq_data:
